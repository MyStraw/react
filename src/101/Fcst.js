import UltraSrtFcst from './UltraSrtFcst';
import VilageFcst from './VilageFcst';

const Fcst = () => {

    return (
        <>        
        <UltraSrtFcst/>
        <VilageFcst/>
        </>
       
    )
}

export default Fcst;

//모든 결과물은 HTML로 나온다
//복습
//코드를 외운다? 아무 의미 없당
//리액트를 가지고 어떻게 하더라~ 이걸 이해해
//GPT 자제. 현업이 아니고 우린 학생이양~
//GTP가 뱉은 코드 이해를 해야.

//HTML 태그 = 웹 브라우저가 이해하는 명령어. 구조.
//HTML5 오면서 새 태그가. 시맨틱 태그(css). 봇이 문서를 읽어. 주기적으로 스크래핑 하는 봇. 문서를 보며 읽어내
//
//CSS 디자인 = 여기까진 정적인 페이지

//내가 액션을 가햇을때 변화가 일어났음 좋겠다=>버튼 눌렀을때 일어나는 일,
//동적으로 발생했음 좋겠다. ID PASS 입력시 일일이 모든사람의 페이지를 만들필요가 X 껍데기는 같으니까.
//DB에서 DATA만 다른거. 이거 들어오면서 동적으로 바뀌기 시작. 이 기술이 발전

//ASP, JSP 이런거 이용했던 때도.
// 데이터를 가져와서 뿌려줘야. 자바 스크립트로만 해도 되지만
//리액트 컴퍼넌트 쓰면 편해서 리액트를 쓴다. 작게 모듈화 시켜서 여기넣고 저기넣고. 컴포넌트 쪼개다 보니..
//컴포넌트로 쪼개다 보니 자식 컴포넌트에서 공통으로 쓰는게 생긴다. 이걸 어떻게 전달?
//props로 전달.

//바뀐값으로, 원하는 부분만 바뀌고 싶다? 이것만 바꾸면 되는데-> State. 여기만 바꿔준다.

//전체상태 관리 - 리코일? 을 할꺼다.

//지금 라우트까지 했을때. 버튼 눌러서 건낼때. 유즈params나 {}이걸로 스테이트 해서 다른 페이지로 보낸다.
//state로 보냈으니 다른 페이지에서도 바뀐값을 받아본다.